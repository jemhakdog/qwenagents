from duckduckgo_search import DDGS, AsyncDDGS
import json, json5
from qwen_agent.tools.base import BaseTool, register_tool

@register_tool('my_image_searcher')
class MyImageSearcher(BaseTool):
    description ='search for images on the internet'
    parameters = [
        {
            'name': 'keywords',
            'type': 'string',
            'description': 'The keywords to search for',
            'required': True
        },
        {
            'name': 'region',
            'type': 'string',
            'description': 'The region to search in',
            'required': False
        },
        {
            'name': 'safesearch',
            'type': 'string',
            'description': 'The safesearch setting',
            'required': False
        },
        {
            'name': 'max_results',
            'type': 'int',
            'description': 'The maximum number of results',
            'required': False
        },
    ]

    def call(self, params: str, **kwargs) -> str:
        # `params` are the arguments generated by the LLM agent.
        keywords = json5.loads(params)['keywords']
        region = json5.loads(params).get('region', 'wt-wt')
        safesearch = json5.loads(params).get('safesearch', 'off')
        max_results = json5.loads(params).get('max_results', 100)

        results = DDGS().images(
            keywords=keywords,
            region=region,
            safesearch=safesearch,
            max_results=max_results,
        )

        return json.dumps(results)