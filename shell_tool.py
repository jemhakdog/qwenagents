import subprocess
import json
from qwen_agent.tools.base import BaseTool, register_tool

@register_tool('my_shell_tool')
class MyShellTool(BaseTool):
    description = 'Execute shell commands in Windows'
    parameters = [
        {
            'name': 'command',
            'type': 'string',
            'description': 'The command to execute in the shell',
            'required': True
        }
    ]
    
    def call(self, params: str, **kwargs) -> str:
        # `params` are the arguments generated by the LLM agent.
        command = json.loads(params)['command']
        try:
            result = subprocess.run(command, shell=True, universal_newlines=True, capture_output=True)
            if result.returncode == 0:
                output = result.stdout.strip()
                if output:
                    return json.dumps({'output': output})
                else:
                    return json.dumps({'message': 'Command executed successfully'})
            else:
                return json.dumps({'error': result.stderr.decode('utf-8')})
        except Exception as e:
            return json.dumps({'error': str(e)})

    # def call(self, params: str, **kwargs) -> str:
    #     # `params` are the arguments generated by the LLM agent.
    #     command = json.loads(params)['command']
    #     try:
    #         output = subprocess.check_output(command, shell=True, universal_newlines=True)
    #         return json.dumps({'output': output})
    #     except subprocess.CalledProcessError as e:
    #         return json.dumps({'error': e.output.decode('utf-8')})