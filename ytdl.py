from yt_dlp import YoutubeDL
from yt_dlp.utils import YoutubeDLError
import json
from qwen_agent.tools.base import BaseTool, register_tool

@register_tool('youtube_downloader')
class YouTubeDownloader(BaseTool):
    description = 'Download YouTube videos'
    parameters = [
        {
            'name': 'url',
            'type': 'string',
            'description': 'The URL of the YouTube video to download',
            'required': True
        },
        {
            'name': 'format',
            'type': 'string',
            'description': 'The format of the video to download (e.g. mp4, webm, etc.)',
            'required': False
        },
        {
            'name': 'quality',
            'type': 'string',
            'description': 'The quality of the video to download (e.g. 1080p, 720p, etc.)',
            'required': False
        },
        {
            'name': 'output',
            'type': 'string',
            'description': 'The output file name',
            'required': False
        },
    ]
    
    def call(self, params: str, **kwargs) -> str:
        # `params` are the arguments generated by the LLM agent.
        url = json.loads(params)['url']
        format = json.loads(params).get('format','mp4')
        quality = json.loads(params).get('quality')

        try:
            with YoutubeDL() as ydl:
                info = ydl.extract_info(url, download=False)
                video_title = info['title']

            # Replace special characters in the video title with underscores
            video_title = video_title.replace(' ', '_').replace(':', '_').replace('|', '_')

            ydl_opts = {
                'format': format,
                'quality': quality,
                'outtmpl': f"/downloads/{video_title}.{format}",
            }

            with YoutubeDL(ydl_opts) as ydl:
                info = ydl.extract_info(url, download=True)
                return json.dumps({'status': f'{url} downloaded successfully'})
        except YoutubeDLError as e:
            return json.dumps({'status': 'error', 'message': str(e)})

    # def call(self, params: str, **kwargs) -> str:
    #     # `params` are the arguments generated by the LLM agent.
    #     url = json.loads(params)['url']
    #     format = json.loads(params).get('format')
    #     quality = json.loads(params).get('quality')
    #     output = json.loads(params).get('output')

    #     ydl_opts = {
    #         'format': format,
    #         'quality': quality,
    #         'outtmpl': "/downloads/"+output,
    #     }

    #     try:
    #         with YoutubeDL(ydl_opts) as ydl:
    #             info = ydl.extract_info(url, download=True)
    #             return json.dumps({'status': f'{url} downloaded successfully'})
    #     except YoutubeDLError as e:
    #         return json.dumps({'status': 'error', 'message': str(e)})